name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run oxlint
      run: npm run lint
    - name: Get installed Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_OUTPUT
    - name: Cache playwright binaries
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: |
          ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}
    - name: Cache system dependencies
      uses: actions/cache@v4
      id: system-deps-cache
      with:
        path: |
          /var/cache/apt
          /var/lib/apt/lists
        key: ${{ runner.os }}-system-deps-${{ hashFiles('.github/workflows/playwright.yml') }}
        restore-keys: |
          ${{ runner.os }}-system-deps-
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'
    - name: Install Playwright Browsers (cache hit)
      run: npx playwright install
      if: steps.playwright-cache.outputs.cache-hit == 'true' && steps.system-deps-cache.outputs.cache-hit == 'true'
    - name: Install Playwright system dependencies
      run: npx playwright install-deps
      if: steps.playwright-cache.outputs.cache-hit == 'true' && steps.system-deps-cache.outputs.cache-hit != 'true'
  
    - name: Run Playwright tests
      run: npx playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
